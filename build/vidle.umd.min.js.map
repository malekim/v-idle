{"version":3,"file":"vidle.umd.min.js","sources":["../src/components/vidle.ts"],"sourcesContent":["import {\n  h,\n  nextTick,\n  ref,\n  defineComponent,\n  type PropType,\n  type Ref,\n  onMounted,\n  onBeforeUnmount,\n} from 'vue-demi'\n\ntype ClearEvent = {\n  type: string\n  key: string | undefined\n}\n\nexport default defineComponent({\n  emits: ['idle', 'remind', 'refresh'],\n  props: {\n    duration: {\n      type: Number,\n      // default 5 minutes\n      default: 60 * 5,\n    },\n    events: {\n      type: Array as PropType<string[]>,\n      default: (): string[] => ['mousemove', 'keypress'],\n    },\n    loop: {\n      type: Boolean,\n      default: false,\n    },\n    syncKey: {\n      type: String,\n      default: '',\n    },\n    reminders: {\n      type: Array as PropType<number[]>,\n      // array of seconds\n      // emit \"remind\" event on each second\n      default: (): number[] => [],\n    },\n    wait: {\n      type: Number,\n      default: 0,\n    },\n  },\n  setup: (props, { emit }) => {\n    const display: Ref<string> = ref('')\n    const timer: Ref<number | undefined> = ref(undefined)\n    const start: Ref<number> = ref(0)\n    const counter: Ref<number | undefined> = ref(undefined)\n    const diff: Ref<number> = ref(0)\n    const minutes: Ref<string> = ref('')\n    const seconds: Ref<string> = ref('')\n    const broadcastChannel: Ref<BroadcastChannel | undefined> = ref(undefined)\n\n    const isSyncEnabled: boolean =\n      props.syncKey.length > 0 &&\n      typeof window !== 'undefined' &&\n      'BroadcastChannel' in window\n\n    const shouldRemind = () => {\n      if (props.reminders.length > 0) {\n        if (props.reminders.includes(diff.value)) {\n          remind()\n        }\n      }\n    }\n\n    const setDisplay = () => {\n      // seconds since start\n      diff.value = props.duration - (((Date.now() - start.value) / 1000) | 0)\n\n      if (diff.value < 0 && !props.loop) {\n        clearInterval(timer.value)\n        clearInterval(counter.value)\n        return\n      }\n      shouldRemind()\n\n      // bitwise OR to handle parseInt\n      const minute = (diff.value / 60) | 0\n      const second = diff.value % 60 | 0\n\n      minutes.value = `${minute < 10 ? '0' + minute : minute}`\n      seconds.value = `${second < 10 ? '0' + second : second}`\n\n      display.value = `${minutes.value}:${seconds.value}`\n    }\n\n    const countdown = () => {\n      setDisplay()\n\n      if (diff.value <= 0 && props.loop) {\n        // add second to start at the full duration\n        // for instance 05:00, not 04:59\n        start.value = Date.now() + 1000\n      }\n    }\n\n    const idle = () => {\n      emit('idle')\n    }\n\n    const remind = () => {\n      emit('remind')\n    }\n\n    const setTimer = () => {\n      timer.value = window.setInterval(idle, props.duration * 1000)\n      counter.value = window.setInterval(countdown, 1000)\n    }\n\n    const clearEvent = (event: Event) => {\n      const clearEvent: ClearEvent = {\n        type: event.type,\n        key: event instanceof KeyboardEvent ? event.key : undefined,\n      }\n      clearTimer(clearEvent)\n      // clearEvent is called only in original tab when sync is on\n      if (isSyncEnabled) {\n        sendBroadcastEvent(clearEvent)\n      }\n    }\n\n    const clearTimer = (clearEvent: ClearEvent) => {\n      emit('refresh', clearEvent)\n      clearInterval(timer.value)\n      clearInterval(counter.value)\n      setDisplay()\n      start.value = Date.now()\n      diff.value = 0\n      setTimer()\n    }\n\n    const sendBroadcastEvent = (event: ClearEvent) => {\n      if (broadcastChannel.value !== undefined) {\n        broadcastChannel.value.postMessage(event)\n      }\n    }\n\n    const setBroadcastChannel = () => {\n      broadcastChannel.value = new BroadcastChannel(props.syncKey)\n      broadcastChannel.value.addEventListener(\n        'message',\n        (event: MessageEvent<ClearEvent>) => {\n          clearTimer(event.data)\n        },\n      )\n    }\n\n    onMounted(() => {\n      if (isSyncEnabled) {\n        setBroadcastChannel()\n      }\n      setTimeout(() => {\n        start.value = Date.now()\n        setDisplay()\n        nextTick(() => {\n          setTimer()\n          for (let i = props.events.length - 1; i >= 0; i -= 1) {\n            window.addEventListener(props.events[i], clearEvent)\n          }\n        })\n      }, props.wait * 1000)\n    })\n\n    onBeforeUnmount(() => {\n      clearInterval(timer.value)\n      clearInterval(counter.value)\n      for (let i = props.events.length - 1; i >= 0; i -= 1) {\n        window.removeEventListener(props.events[i], clearEvent)\n      }\n    })\n\n    return {\n      display,\n    }\n  },\n  render() {\n    return h(\n      'div',\n      {\n        class: 'v-idle',\n      },\n      this.display,\n    )\n  },\n})\n"],"names":["defineComponent","emits","props","duration","type","Number","default","events","Array","loop","Boolean","syncKey","String","reminders","wait","setup","_a","emit","display","ref","timer","undefined","start","counter","diff","minutes","seconds","broadcastChannel","isSyncEnabled","length","window","setDisplay","value","Date","now","clearInterval","includes","remind","minute","second","concat","countdown","idle","setTimer","setInterval","clearEvent","event","key","KeyboardEvent","clearTimer","sendBroadcastEvent","postMessage","onMounted","BroadcastChannel","addEventListener","data","setTimeout","nextTick","i","onBeforeUnmount","removeEventListener","render","h","class","this"],"mappings":"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"}